services:
  web:
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
    networks:
      - monitoring
      - web_private
    labels:
      - "prometheus_job=web"
    deploy:
      replicas: 2
      mode: replicated
      endpoint_mode: dnsrr
    environment:
      - API_METRICS_USERNAME=admin # Example username credentials
      - API_METRICS_PASSWORD=admin # Example password credentials
    restart: unless-stopped
  
  prometheus-app:
    image: prom/prometheus
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - /var/run/docker.sock:/var/run/docker.sock # Docker socket for service discovery
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml' # Configuration file
      - '--web.console.libraries=/usr/share/prometheus/console_libraries' # Console libraries
      - '--web.console.templates=/usr/share/prometheus/consoles' # Console templates
      - '--storage.tsdb.path=/prometheus' # Data storage path
      - '--storage.tsdb.retention.time=15d' # Data retention time
      - '--storage.tsdb.wal-compression' # Write Ahead Log compression
      - '--web.enable-lifecycle' # Enable web interface lifecycle management
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway" # For accessing host services
    networks:
      - monitoring
    user: root # Run as root to access Docker socket

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - web_private

networks:
  monitoring:
    driver: bridge
  web_private:
    driver: bridge

volumes:
  prometheus_data: